name: CI/CD Pipeline react app

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set CI to false
        run: echo "CI=false" >> $GITHUB_ENV

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.14.0'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Install babel
        run: npm install --save-dev @babel/plugin-proposal-private-property-in-object

      - name: Build the React app
        env:
          REACT_APP_EDAMAM_API_KEY: ${{ secrets.EDAMAM_API_KEY }}
        run: npm run build

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/reactapp:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/reactapp:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: SSH into Server and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Pull the latest Docker image
            docker pull ${{ secrets.DOCKER_USERNAME }}/reactapp:latest
            
            # Stop and remove the old container if it exists
            docker stop reactapp || true
            docker rm reactapp || true
            
            # Run the new container
            docker run -d -p 80:80 --name reactapp ${{ secrets.DOCKER_USERNAME }}/reactapp:latest
